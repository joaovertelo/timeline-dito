{"version":3,"sources":["logo.svg","component/Timeline/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","moment","require","TimeLine","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","formataData","data","format","toString","formataPreco","preco","toLocaleString","style","currency","titulo","loja","react_default","a","createElement","className","backgroundColor","color","padding","borderRadius","inherits","createClass","key","value","props","_this2","dist","width","map","obj","index","icon","fa","title","timestamp","preco_total","produtos","produto","produto_nome","produto_preco","Component","_","App","state","axios","get","then","res","events","compras","filter","event","compra_produto","o","transaction","custom_data","revenue","orderBy","console","log","setState","src","logo","alt","component_Timeline","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e013ea93.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react'\r\nimport { Timeline, TimelineEvent } from 'react-event-timeline'\r\nimport './Timeline.css'\r\nimport { FaShoppingBag } from 'react-icons/fa';\r\n\r\nconst moment = require('moment');\r\n\r\nexport class TimeLine extends Component {\r\n\r\n    componentDidMount(props) {\r\n\r\n    }\r\n\r\n    formataData = data => {\r\n        return moment(data).format('DD-MM-YYYY HH:mm').toString();\r\n    };\r\n\r\n    formataPreco = preco => preco.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' });\r\n\r\n    titulo = (data, preco, loja) =>\r\n        <div className='flex-container' >\r\n            <div style={{ backgroundColor: '#dddddd', color: 'grey', padding: '10px', borderRadius: '10px' }}>{this.formataData(data)}</div>\r\n            <div style={{ padding: '10px', backgroundColor: '#DEB340', borderRadius: '10px' }}> {this.formataPreco(preco)} </div>\r\n            <div style={{ padding: '10px' }}> {loja} </div>\r\n        </div>;\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Timeline style={{ width: '600px' }}>\r\n                {this.props.data && this.props.data.map((obj, index) =>\r\n                    <TimelineEvent icon={<FaShoppingBag />} key={index} title={this.titulo(obj.timestamp, obj.preco_total, obj.loja)} >\r\n                        <table>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <th>Produto</th>\r\n                                    <th>Pre√ßo</th>\r\n                                </tr>\r\n                                {obj.produtos.map((produto, index) =>\r\n                                    <tr key={index}>\r\n                                        <td>{produto.produto_nome}</td>\r\n                                        <td>{this.formataPreco(produto.produto_preco)}</td>\r\n                                    </tr>\r\n                                )}\r\n\r\n                            </tbody>\r\n                        </table>\r\n                    </TimelineEvent>\r\n                )\r\n\r\n                }\r\n            </Timeline>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TimeLine\r\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Timeline from './component/Timeline'\nimport axios from 'axios'\nconst _ = require('lodash')\n\nclass App extends Component {\n  state = {}\n\n  componentDidMount() {\n    axios.get(\"https://storage.googleapis.com/dito-questions/events.json\").then(res => {\n      if (res.data && res.data.events) {\n        let compras = _.filter(res.data.events, { event: \"comprou\" });\n\n        let compra_produto = _.filter(res.data.events, { event: \"comprou-produto\" });\n        compra_produto = compra_produto.map(o => {\n          let transaction = o.custom_data.filter(o => o.key === \"transaction_id\")[0].value\n          let produto_nome = o.custom_data.filter(o => o.key === \"product_name\")[0].value\n          let produto_preco = o.custom_data.filter(o => o.key === \"product_price\")[0].value\n\n          return {\n            produto_nome: produto_nome,\n            transaction: transaction,\n            produto_preco: produto_preco,\n            timestamp: o.timestamp\n          };\n        })\n        \n        compras = compras.map(o => {\n          let transaction = o.custom_data.filter(o => o.key === \"transaction_id\")[0].value\n          let loja = o.custom_data.filter(o => o.key === \"store_name\")[0].value\n          let produtos = _.filter(compra_produto, { transaction })\n\n          return {\n            loja: loja,\n            transaction: transaction,\n            produtos,\n            timestamp: o.timestamp,\n            preco_total: o.revenue\n          };\n        })\n        compras = _.orderBy(compras, ['timestamp'], ['desc']);\n        console.log(\"compras\", compras)\n        this.setState({ compras })\n      }\n    })\n  }\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        </header>\n\n        <section >\n          <h2>Componente timeline de compras:</h2>\n          <article>\n            {this.state.compras &&\n              <Timeline data={this.state.compras} />\n            }\n          </article>\n        </section>\n\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}